set-option -g xterm-keys on

# status bar
set-option -g status-utf8 on
set-option -g status-bg colour234
set-option -g status-fg colour118
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour247
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour39
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# alert window title colors
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-activity-bg default
set-window-option -g window-status-activity-fg colour196

# current window format
set-window-option -g window-status-format '#I[#W]#F'
set-window-option -g window-status-current-format '#I[#W(#[fg=colour28]#{pane_current_command}#[fg=colour39])]#F'

# pane border
set-option -g pane-border-fg colour28
set-option -g pane-active-border-fg colour118

# message text
set-option -g message-bg colour234
set-option -g message-fg colour41
set-option -g message-attr default

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour colour118
set-window-option -g clock-mode-style 12 #12 hour clock

# keep pane open when program has exited
set-window-option -g remain-on-exit on

set -g status-interval 2
set -g status-justify centre
set -g status-left-length 50
set -g status-right-length 100
set -g status-left '#[fg=colour35, dim]#S'
set -g status-right '#[fg=colour118, default]%l:%M:%S %P %m/%d/%y'
set -g status-keys vi
set -g status-position bottom

set-option -g prefix C-a
bind-key C-a send-prefix

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Constrain window size to the maximum size of any client connected to the window
set-window-option -g aggressive-resize on

# Activity monitoring
set-window-option -g monitor-activity on
set -g visual-activity off
set -g visual-bell off

# Arrow/hjkl keys to switch between panes/windows
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Respawn pane
bind R respawn-pane

# Auto window rename
set-window-option -g automatic-rename

# Auto window renumber
set-option -g renumber-windows on

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-window on
set -g mouse-select-pane on
bind m \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-window off \;\
    set -g mouse-select-pane off \;\
    display-message "Mouse control: off"
bind M \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-window on \;\
    set -g mouse-select-pane on \;\
    display-message "Mouse control: on"

# 256 color
set -g default-terminal "screen-256color"

set -g history-limit 25000

# Easy window splitting
unbind %
bind | split-window -h
unbind '"'
bind _ split-window -v
# Window killing
unbind &
bind X confirm-before -p "kill-window #W? (y/n)" kill-window
# Window resizing
bind = select-layout tiled
# Copy mode vi bindings
set-window-option -g mode-keys vi
# Use vi-style V to visual-line select
bind-key -t vi-copy 'v' begin-selection
# Use vi-style C-v to toggle visual-block select
bind-key -t vi-copy 'C-v' rectangle-toggle
# Use vi-style y to yank/copy selection
bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
